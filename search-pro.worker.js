const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":49,\"nextId\":49,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-184f4da6#前言\",\"2\":\"v-184f4da6#个人技能\",\"3\":\"v-184f4da6#个人爱好\",\"4\":\"v-184f4da6#如何找到我\",\"5\":\"v-64ade2e3\",\"6\":\"v-64ade2e3#静态测试-动态测试\",\"7\":\"v-64ade2e3#黑盒测试\",\"8\":\"v-64ade2e3#白盒测试\",\"9\":\"v-64ade2e3#集成测试\",\"10\":\"v-64ade2e3@1\",\"11\":\"v-5c376c40\",\"12\":\"v-5c376c40@0\",\"13\":\"v-5c376c40@1\",\"14\":\"v-4f8f3ee0\",\"15\":\"v-4f8f3ee0#常用项\",\"16\":\"v-4f8f3ee0#可选项\",\"17\":\"v-4f8f3ee0@0\",\"18\":\"v-4f8f3ee0@1\",\"19\":\"v-32ddaaad\",\"20\":\"v-32ddaaad#前言\",\"21\":\"v-32ddaaad#关于海投\",\"22\":\"v-32ddaaad#滴滴一面-二面\",\"23\":\"v-32ddaaad#字节一面\",\"24\":\"v-32ddaaad#第一题-事件循环的题\",\"25\":\"v-32ddaaad#第二题-三栏布局\",\"26\":\"v-32ddaaad#第三问-链表的倒数第-k-个元素\",\"27\":\"v-32ddaaad#第四问-函数柯里化\",\"28\":\"v-32ddaaad#总结\",\"29\":\"v-32ddaaad@1\",\"30\":\"v-4df3c2ee\",\"31\":\"v-4df3c2ee#前言\",\"32\":\"v-4df3c2ee#_1-url-的输入到浏览器解析的一系列事件\",\"33\":\"v-4df3c2ee#补充一-强制缓存和协商缓存\",\"34\":\"v-4df3c2ee#补充二-预检请求和询问请求\",\"35\":\"v-4df3c2ee#_2-事件代理\",\"36\":\"v-4df3c2ee#_3-关于-object-create\",\"37\":\"v-4df3c2ee#_4-vue-nexttick-原理\",\"38\":\"v-4df3c2ee#_1-对象扁平化\",\"39\":\"v-4df3c2ee#_2-判断括号字符串是否有效\",\"40\":\"v-4df3c2ee#_3-查找数组公共前缀\",\"41\":\"v-4df3c2ee#_4-字符串最长的不重复子串\",\"42\":\"v-4df3c2ee#_5-数组中第一个没出现的最小正整数\",\"43\":\"v-4df3c2ee#_6-怎么在制定数据源里面生成一个长度为-n-的不重复随机数组\",\"44\":\"v-4df3c2ee@1\",\"45\":\"v-2d8fd698\",\"46\":\"v-36c3b434\",\"47\":\"v-39628555\",\"48\":\"v-fe46a9b0\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,12],\"2\":[2,18],\"3\":[2,4],\"4\":[2,10],\"5\":[1],\"6\":[2,15],\"7\":[1,71],\"8\":[1,47],\"9\":[1,10],\"10\":[null,null,1],\"11\":[1,6],\"12\":[null,null,1],\"13\":[null,null,2],\"14\":[2,11],\"15\":[1,11],\"16\":[1,5],\"17\":[null,null,1],\"18\":[null,null,1],\"19\":[1,2],\"20\":[1,22],\"21\":[1,17],\"22\":[2,44],\"23\":[1,23],\"24\":[2,34],\"25\":[2,11],\"26\":[4,20],\"27\":[2,65],\"28\":[1,33],\"29\":[null,null,1],\"30\":[1],\"31\":[1,19],\"32\":[3,17],\"33\":[2,43],\"34\":[2,64],\"35\":[2,13],\"36\":[4,72],\"37\":[4,16],\"38\":[2,4],\"39\":[2,31],\"40\":[2,28],\"41\":[2,39],\"42\":[2,40],\"43\":[4,17],\"44\":[null,null,1],\"45\":[1],\"46\":[1],\"47\":[1],\"48\":[1]},\"averageFieldLength\":[1.6957187263620181,23.489026215501873,0.4014257866889446],\"storedFields\":{\"0\":{\"h\":\"博主简介\"},\"1\":{\"h\":\"前言\",\"t\":[\"大三了呀，大学过的确实快 qwq，前端学了一年多了，蒻鸡一个，遭这个博客是用来记录学习哒。（算是一个对于我自己所学的一个归纳）偶尔也会有一些个人的感谢和闲谈这些。总之，一起努力，冲冲冲！\"]},\"2\":{\"h\":\"个人技能？\",\"t\":[\"主的是 Vue3，因为接触这方面的项目比较多，也学习过一点点源码——《Vue3 设计与实现》，然后嘛，像一些什么uniapp，Electron 这些也做过一些。这得益于他们的包容性 hhh，会个Vue3基本上无脑梭就行啦。我比较喜欢函数式编程的风格，可能是js写多了的原因。排开这些，也了解过一点点点点点工程化的东西，不管只是个会使用的而已。\"]},\"3\":{\"h\":\"个人爱好？\",\"t\":[\"你喜欢羽毛球吗？喜欢的话，那我们肯定能玩的好 ：)\",\"不过我好像也就这么个兴趣\"]},\"4\":{\"h\":\"如何找到我？\",\"t\":[\"如果你也喜欢前端，也喜欢编程，欢迎加我，一起学习！！！\",\"QQ：2171077189\",\"WX：a[QQ 号]\"]},\"5\":{\"h\":\"测试复习\"},\"6\":{\"h\":\"静态测试-动态测试\",\"t\":[\"按照是否被执行可分为动态测试和静态测试\",\"动态测试：功能确认，接口测试，覆盖率分析，性能分析\",\"静态测试：代码检查，静态结构分析，代码质量度量\",\"其中黑盒只有动态测试，白盒有静态和动态\",\"按照是否针对系统内部结构和具体实现算法的角度可分为：黑盒，白盒\"]},\"7\":{\"h\":\"黑盒测试\",\"t\":[\"等价类：找if，寻找有效和无效等价类，并且为此设计测试用例\",\"边界值分析：基于等价类的条件下，设计测试用例的时候进行采取边界值取法。其中取法规则如下：\",\"例如：0<a<10:取值为 -1，0，1，5，9，10，11 -> 范围边界值，中间值，边界值+-1。七个\",\"例题2：若函数有n个参数，求最少取值：可由上所得 -> 6n + 1（注意：这里n个参数的取值是同一个范围）\",\"image-20231127194123118\",\"因果图：找原因 -> 找结果，其中原因附带什么条件可以得出什么结果\",\"约束关系：互斥（E），包含（I），唯一（O），要求（R），屏蔽（M）\",\"image-20231127193101194\",\"因果关系：恒等，非（~），与和或\",\"image-20231127193203639\",\"状态图：明确状态节点 -> 绘制迁移图 -> 绘制状态迁移树 -> 抽取测试路径\",\"场景法：画流程图 -> 主要事件 -> 备选事件 -> 设计测试用例\",\"后两个更倾向于真实业务测试，也就是功能测试。\",\"完美诠释因果图与判定表法 - 知乎 (zhihu.com)\",\"黑盒测试\"]},\"8\":{\"h\":\"白盒测试\",\"t\":[\"白盒测试可分为覆盖测试和基本路径测试。其中覆盖测试有\",\"语句覆盖：让每个语句都执行\",\"判定覆盖：每个判断都取一次真假，例如if(a>0 && b>0)，要保证这个if的值取满true和false\",\"条件覆盖：每个条件，指的是if内部的判断取满true，false。同上例子，要a和b这两个判断都取满true，false\",\"条件判定覆盖：前两个的合并。所以他是一定包含了前两个的覆盖\",\"组合覆盖：条件组合情况，例如上面例子，a>0和b>0的两个判断，这时候就需要他们true，false的所有组合\",\"路径覆盖：画流程图，每条路都走\",\"基本路径测试\",\"圈复杂度：判断节点 + 1，区域的个数，边 - 节点 + 2\",\"使用步骤： \",\"画控制图：先画流程图 -> 控制流图\",\"计算圈复杂度：这个说明需要多少个测试用例\",\"导出测试用例：按照路径给予测试用例\",\"写测试用例\",\"基本路径测试\"]},\"9\":{\"h\":\"集成测试\",\"t\":[\"集成测试_维维sanguine的博客-CSDN博客\",\"集成测试之自顶向下、自底向上、三明治集成-阿里云开发者社区 (aliyun.com)\"]},\"10\":{\"c\":[\"测试\"]},\"11\":{\"h\":\"子序列问题\",\"t\":[\"这两题都是子序列问题，题目类似。但是还未理清，先贴链接\",\"最长重复子数组\",\"最长公共子序列\"]},\"12\":{\"c\":[\"算法\"]},\"13\":{\"c\":[\"动态规划\",\"子序列问题\"]},\"14\":{\"h\":\"frontmatter 配置\",\"t\":[\"https://theme-hope.vuejs.press/zh/config/frontmatter/info.html#author\"]},\"15\":{\"h\":\"常用项\",\"t\":[\"title: 标题 descritption: 描述 category: 分类 tag: 标签 star: 是否收藏 \"]},\"16\":{\"h\":\"可选项\",\"t\":[\"image: 预览图 order: 侧边栏顺序 \"]},\"17\":{\"c\":[\"配置\"]},\"18\":{\"c\":[\"元信息\"]},\"19\":{\"h\":\"关于我第一次面试的这件事\",\"t\":[\"Jsweet 的博客\"]},\"20\":{\"h\":\"前言\",\"t\":[\"在一个水群的一天，我认识了一个正在字节实习大牛，为什么说他是大牛。因为同样大三，我还在学校苦逼，大牛以及是第二段实习（太强啦）。然后他在群里说他现在的部门还有个 hc，ohh，我刚好前两天查了我在字节的流程锁以及解了——因为在牛客上乱搞，然后被锁住了:(——于是，我找上了这位大牛，在他的建议下，开启了海投！\",\"hhh，由于我简历太 la，被这个大牛内推后，直接简历就挂了\"]},\"21\":{\"h\":\"关于海投\",\"t\":[\"在进行海投后，大部分都是石城大海的，Boss 上基本上没人鸟我这个蒻冀，但是一下子投上瘾了。除开在 Boss 上丢，我还去了牛客上头，应该是运气好，遇到了个字节内推和滴滴内推的。然后我就约到面试了。\",\"这个时候的我是比较激动的，毕竟是第一次，有面试，至少不是简历挂。（这说明我也不是太拉嘛）\"]},\"22\":{\"h\":\"滴滴一面，二面\",\"t\":[\"讲真的，滴滴的面试并不是很难。两位面试官都很友好（日常实习只有两面，今天还没出结果，应该是寄了）。面试跟我在牛客上的看的面经差不多，开始先来个自我介绍，然后开始抓我项目里面的细节问，比如我写了一些优化的东西，monorepo，对于一些工具的封装。基本上是把我列在项目亮点里的全部提出来问了一遍 qwq（我丝毫不慌，巴拉巴拉能说一大把）。然后就到了经典八股了，比如什么作用域和作用域链，原型和原型链。大部分都是顺着我讲到什么，面试官就问什么，所以整个面试过程很舒服。\",\"二面就有点小痛苦了，这归咎于我是还没准备就开始投，然后八股文看的少（因为问的基本上都是八股文）。二面问了二十多分钟的项目，然后面试官突然来一句“我看你一面没问过 css，那就来点 css 吧”，我内心是裂开的 qwq。对于我这种flex重度用户来说。结果也很明显，答的一团糟。两轮面试我都贴下面了，真的很简单。\",\"滴滴一面_牛客网 (nowcoder.com)\",\"滴滴二面_牛客网 (nowcoder.com)\"]},\"23\":{\"h\":\"字节一面\",\"t\":[\"跟滴滴一样，先自我介绍和项目走一套，抓了我项目里的几个点问了一下，配置化表单和配置化表格这些，项目问我是丝毫不带一点慌的，不过问优化我估计就得噶 qwq。然后这位面试官也喜欢问 css，也是一顿折磨，问了一些什么position的属性，然后应用场景等等，也问了垂直居中，不过没加条件（不知宽高），还问了选择器，包括优先级这些。因为我提前示弱了，我八股拉，是flex重度使用者，然后他问我个flex是由哪三个属性组合的，然后我就噶了 qwq。然后就到了笔试环节~\"]},\"24\":{\"h\":\"第一题：事件循环的题\",\"t\":[\"这种题都是典中典了，把事假循环玩明白随便答，不过出题者要是想 ex 人，也是个 ex 人的方法。然后回答完肯定会问事假循环的~\",\"setTimeout(() => { console.log(1); }); new Promise((resolve) => { console.log(2); for (let i = 0; i < 10000; i++) { if (i === 9999) resolve(); } console.log(3); }).then(() => console.log(4)); console.log(5); // 结果：2,3,5,4，1 \"]},\"25\":{\"h\":\"第二题：三栏布局\",\"t\":[\"对于一个盒子左中右，左右100px，中间自适应。如果宽度小于360px就换成上中下。\",\"我是flex直接弄的（毕竟我是flex重度用户）。然后也用到了媒体查询，但是具体细节不知道咋写了，面试官很好，没有追究我 qwq\"]},\"26\":{\"h\":\"第三问：链表的倒数第 k 个元素\",\"t\":[\"qwq 这个题我是直接暴力的，就是遍历一遍拿到链表长度，此时要么提前存入数组，然后返回arr[arr.length - k],要么在遍历到达第 k 位置返回\",\"我这个写法给面试官干沉默了，不过也没说啥\",\"我后面问面评的时候，提了一嘴这种写法，他笑了笑说：重在思路嘛。我：内心很慌 qwq。因为好像一下子真不晓得怎么写起来优雅了。能跑就行\"]},\"27\":{\"h\":\"第四问：函数柯里化\",\"t\":[\"这个题其实我是没写出来的，只写了两层，也就是sum(1,2,3) => sum(1)(2,3),并没有把sum(1)(2)(3)写出来。写的时候，沉默震耳欲聋，好慌，然后脑子就发抽了。\",\"题解我丢着了，我们一起再学学。\",\"// 多参数柯里化； const curry = function (fn) { return function curriedFn(...args) { if (args.length < fn.length) { // 我知道要递归，但是一时半会不晓得怎么递归了qwq return function () { return curriedFn(...args.concat([...arguments])); }; } return fn(...args); }; }; const fn = (x, y, z, a) => x + y + z + a; const myfn = curry(fn); console.log(myfn(1)(2)(3)(1)); \",\"字节大概问的就这些，回想起来也不是很难，没有问网络，没有问框架源码，没有问计算机系统，算法给的也不是那么难。同滴滴面试一样，是个人准备不足 qwq。不过我很满意，至少三个面试，两个面评还可以，嘿嘿。而且，我目前学校大三不放人，真要实习，还得旷课 qwq。所以接下来就先不投简历了。这三次面试给的收货很大，让我意识到我本身缺陷在哪，需要补哪。虽然大部分是八股，但是有些确实可以多学学。技多不压身嘛。\"]},\"28\":{\"h\":\"总结\",\"t\":[\"不管是滴滴还是字节，八股占比还是很多的，我个人在工作室开发来说，crud 经历的有点多，久而久之对于这种本来应该是很基础的东西，却忘一干二净（我相信大部分人也是这样）。在业务不断添加的情况下，大部分都是直接组件库一把嗦，更别说我面对的大部分是后台这类的了。这也是我突然相投实习的一个原因。想去扩展自己，换个地方锻炼自己。不想总在舒适圈呆着，就跟我写算法一样，一个简单的dfs我一下子就能秒了，简单的dp，贪心等我都能写的很快，但是我却只是拿着滚瓜烂熟的思想去写的（暴搜/遍历）。一遇见没写过，或者不熟的，就很痛苦。比如最近看到的子序列问题。这些都需要我慢慢去探索，慢慢去学习。\",\"大致就这么点想法了，后期会开始抓着薄弱项慢慢去补。一步步完善自己。\",\"如果有想一起刷算法的可以加我，互相交流题目的思路~\"]},\"29\":{\"c\":[\"面试\"]},\"30\":{\"h\":\"刷题笔记\"},\"31\":{\"h\":\"前言\",\"t\":[\"该文章是我个人在平台上进行刷题得到的一些感悟，针对于大佬文章进对自己知识点的一个补充。有兴趣的可以看看。若有问题，欢迎大家指点，我只是小菜鸡。\",\"文章原链接:最新的前端大厂面经（详解答案） - 掘金 (juejin.cn)\",\"个人博客:Jsweet 的博客 (jsweeta.github.io)\"]},\"32\":{\"h\":\"1.URL 的输入到浏览器解析的一系列事件\",\"t\":[\"查缓存\",\"域名解析\",\"tcp 连接\",\"http 连接\",\"构建渲染树\",\"渲染\",\"关闭 tcp\",\"详细请看：史上最详细的经典面试题 从输入 URL 到看到页面发生了什么？ - 掘金 (juejin.cn)\"]},\"33\":{\"h\":\"补充一：强制缓存和协商缓存\",\"t\":[\"缓存分为：强制缓存（200）和协商缓存（304）\",\"强制缓存：通过判断一些字段进行验证缓存是否失效，失效则重新请求并缓存，反之直接读取缓存信息。 \",\"Expires：有效期\",\"Cache-Control：public,private,no-catch,no-store,max-age（有效期秒数）\",\"那么就可能会出现，缓存本身其实是没失效，但是假如服务器自己更改了。那么就可能读取不到最新数据\",\"协商缓存：顾名思义，客户端与服务端进行协商。客户端进行请求时，先发个请求询问服务器数据是否有变化。有则重新请求，无则读取缓存。 \",\"If-Modified-Since：用修改时间进行比较\",\"If-None-Match：用哈希值进行比较（Etag）\",\"注意：强制缓存是由服务器进行发起的，协商缓存是由客户端进行发起的。\"]},\"34\":{\"h\":\"补充二：预检请求和询问请求\",\"t\":[\"先说顺序：先预检请求 -> 询问请求（假如有的话） -> 真实请求\",\"同理，三个请求就会有三个响应，所以会有六个TCP数据包\",\"预检请求：针对于非简单请求的一个安全操作，是一个浏览器的行为。也就是所访问的服务器端，允不允许跨域。\",\"询问请求：这是用于针对一些拥有大数据包的请求，避免浪费资源的一次询问操作，第一次询问是不带请求体，询问后如果允许，会返回100 Continue的响应码。客户端收到后，再进行发送实际的请求。\",\"注意：预检请求时浏览器行为，也就是说，如果可以脱离浏览器环境，那么就不会有这个操作。而询问请求是一个优化策略，防止一些没必要的流量浪费。\",\"跨域资源共享 CORS 详解 - 阮一峰的网络日志 (ruanyifeng.com)\",\"补充三：回流和重绘\",\"回流一定会引发重绘，但是重绘不会引发回流\",\"回流：也叫做重新布局，一系列可能会导致盒子布局改变的都会触发回流。比如宽高，位置，内外边距等等。\",\"重绘：重新填色，他与盒子的样式有关系，这里指的样式是指颜色那种东西，不会造成布局改变的\",\"如何避免？\",\"对于css3我并不是很熟，所以也不敢多说什么，大致优化策略是这样：\",\"回流和重绘会导致性能下降的原因可以归咎于他会抢占浏览器主线程的运行时机，从而导致页面看起来卡顿。解决方法就是避免抢占，比如开启一些GPU加速之类的东西。（-.-）这些我不是很懂。后期补上。\",\"因为这里涉及到了关于浏览器针对渲染分层的一些知识，什么渲染层啊，合成层啊啥啥啥的。\"]},\"35\":{\"h\":\"2.事件代理\",\"t\":[\"由于每个事件处理器都会占用一定的内存，对于一些那种列表类型，但是都需要进行事件响应的，就可以进行一个事件代理，把 n 个消耗转换为 1 个消耗。\",\"除了事件代理，还可以利用防抖和节流进行优化，后续补上。\"]},\"36\":{\"h\":\"3.关于 Object.create\",\"t\":[\"以一个现有对象作为原型，创建一个新对象。 --MDN 官方解释\",\"以一个现有对象为原型，创建一个新对象。那么可以利用它实现寄生组合继承,new\",\"new\",\"function myNew(fn, ...rest) { // 以fn的原型为基础，进行创建一个新的对象：之所以这么用，是考虑到当前这个fn可能继承了其他的。所以需要以他的原型为原型，如果不考虑继承，其实普通的obj也可以 const obj = Object(fn.prototype); // 利用this指向改变的原理，通过call或者bind或者apply进行实例化构造 const res = fn.call(obj, ...rest); // new 如果有返回值会以返回值为实例对象 typeof res === \\\"object\\\" || typeof res === \\\"function\\\" ? res : obj; } \",\"补充：关于this指向的改变：xxx.fn(),this就指向 xxx，包括call，bind，apply都是进行一次包装使之当前的fn挂载到需要被指向的对象上，然后进行一次函数调用；\",\"寄生组合继承\",\"第一步：子类负责调用父类的构造方法（也就是Parent.call(this)）\",\"第二步：将父类的原型赋予到子类的原型上去\",\"第三步：更新子类构造函数的指向\",\"function Parent(name) { this.name = name; this.say = () => { console.log(111); }; } Parent.prototype.play = () => { console.log(222); }; function Children(name) { // 调用父类构造方法：本质是this指向改变从而进行值的赋予 Parent.call(this); this.name = name; } // 改变原型的指向 Children.prototype = Object.create(Parent.prototype); // 改变构造器的指向：构造器本身是指向自己的，但是由于原型改变了，所以需要更新一下 Children.prototype.constructor = Children; \",\"这里除了牵扯出这些知识，其实还可以引出原型链，箭头函数和普通函数的区别，以及其他几种继承的缺点\"]},\"37\":{\"h\":\"4.Vue nextTick 原理\",\"t\":[\"简而言之，优先想办法把需要执行的事件插入到微任务队列，其次才是其他任务队列。\",\"Promise:Promise.then可以直接将事件推入微任务队列尾部。\",\"MutationObserver:它可以监听 dom 的变化，然后执行对应回调。\",\"setImmediate和setTimeout:利用浏览器事件循环进行塞入回调。\",\"这次可接着询问：浏览器事件循环,观察者模式/发布订阅模式\"]},\"38\":{\"h\":\"1. 对象扁平化\",\"t\":[\"思路:针对对象和数组分别进行判断递归进行组合，利用Object.keys\"]},\"39\":{\"h\":\"2. 判断括号字符串是否有效\",\"t\":[\"题目链接：\",\"思路:利用栈进行一个回滚操作进行判断\",\"var isValid = function (s) { // 构造哈希 let state = { \\\")\\\": \\\"(\\\", \\\"]\\\": \\\"[\\\", \\\"}\\\": \\\"{\\\", }; let stack = []; for (let t of s) { // 如果是左则直接进入栈 if (t === \\\"(\\\" || t === \\\"[\\\" || t === \\\"{\\\") { stack.push(t); } else { // 否则弹出一个进行匹配，匹配失败直接false if (stack.pop() === state[t]) { continue; } else { return false; } } } if (stack.length === 0) return true; else return false; }; \"]},\"40\":{\"h\":\"3. 查找数组公共前缀\",\"t\":[\"题目链接：14. 最长公共前缀 - 力扣（LeetCode）\",\"思路:该题求的只是公共前缀，可以利用startsWith进行暴力求解\",\"var longestCommonPrefix = function (strs) { let res = \\\"\\\"; for (let i of strs[0]) { res += i; for (let str of strs) { if (!str.startsWith(res)) { return res?.substring(0, res.length - 1); } } } return strs[0]; }; \"]},\"41\":{\"h\":\"4. 字符串最长的不重复子串\",\"t\":[\"题目链接：3. 无重复字符的最长子串 - 力扣（LeetCode）\",\"思路:滑动窗口，left 和 right 两个指针，向前前进，如果有相等的了，left就往前，反之right往后。然后记录最大值\",\"var lengthOfLongestSubstring = function (s) { // 左右指针和结果 let left = 0, right = 0, res = 0; while (right < s.length) { // 初始值 if (!right) right++; else { // 判断右边的是否在队列 if (s.substring(left, right).includes(s[right])) { left++; } else { right++; } } res = res > right - left ? res : right - left; } return res; }; \"]},\"42\":{\"h\":\"5. 数组中第一个没出现的最小正整数\",\"t\":[\"题目链接：41. 缺失的第一个正数 - 力扣（LeetCode）\",\"思路 1：利用哈希进行遍历搜索，从 0-n\",\"var firstMissingPositive = function (nums) { const set = {}; // 哈希记录 for (let i of nums) set[i] = 1; // 假设都有，那么答案必是n + 1 for (let i = 1; i <= nums.length + 1; i++) { if (!set[i]) return i; } }; \",\"思路 2：借助假设都有，答案必是n + 1的条件，将数组中的正整数放置自己对应的位置，从而得到一个有序数组[1,2,3,4],然后判断索引与值是否相等\"]},\"43\":{\"h\":\"6. 怎么在制定数据源里面生成一个长度为 n 的不重复随机数组\",\"t\":[\"思路 1：哈希判断是否被用过，用过则接着选\",\"思路 2：用一个删一个，保证数据源都是没用过的\",\"思路 3：一样是用一个删一个，但是这个删是类似于冒泡算法一样，先取一个出来，然后逐步递减随机区间，并且依次将取出来的值替换掉（跟思路 2 一样），得以保证数据源都是没取过的。\"]},\"44\":{\"c\":[\"面试\"]},\"45\":{\"h\":\"学校课程复习\"},\"46\":{\"h\":\"算法\"},\"47\":{\"h\":\"配置文件\"},\"48\":{\"h\":\"闲人杂谈\"}},\"dirtCount\":0,\"index\":[[\"闲人杂谈\",{\"0\":{\"48\":1}}],[\"学校课程复习\",{\"0\":{\"45\":1}}],[\"得以保证数据源都是没取过的\",{\"1\":{\"43\":1}}],[\"跟思路\",{\"1\":{\"43\":1}}],[\"跟滴滴一样\",{\"1\":{\"23\":1}}],[\"保证数据源都是没用过的\",{\"1\":{\"43\":1}}],[\"哈希判断是否被用过\",{\"1\":{\"43\":1}}],[\"哈希记录\",{\"1\":{\"42\":1}}],[\"怎么在制定数据源里面生成一个长度为\",{\"0\":{\"43\":1}}],[\"6\",{\"0\":{\"43\":1}}],[\"6n\",{\"1\":{\"7\":1}}],[\"将数组中的正整数放置自己对应的位置\",{\"1\":{\"42\":1}}],[\"将父类的原型赋予到子类的原型上去\",{\"1\":{\"36\":1}}],[\"答案必是n\",{\"1\":{\"42\":1}}],[\"答的一团糟\",{\"1\":{\"22\":1}}],[\"借助假设都有\",{\"1\":{\"42\":1}}],[\"假设都有\",{\"1\":{\"42\":1}}],[\"假如有的话\",{\"1\":{\"34\":1}}],[\"缺失的第一个正数\",{\"1\":{\"42\":1}}],[\"数组中第一个没出现的最小正整数\",{\"0\":{\"42\":1}}],[\"初始值\",{\"1\":{\"41\":1}}],[\"while\",{\"1\":{\"41\":1}}],[\"wx\",{\"1\":{\"4\":1}}],[\"左右指针和结果\",{\"1\":{\"41\":1}}],[\"左右100px\",{\"1\":{\"25\":1}}],[\"反之right往后\",{\"1\":{\"41\":1}}],[\"反之直接读取缓存信息\",{\"1\":{\"33\":1}}],[\"向前前进\",{\"1\":{\"41\":1}}],[\"和\",{\"1\":{\"41\":1}}],[\"和协商缓存\",{\"1\":{\"33\":1}}],[\"滑动窗口\",{\"1\":{\"41\":1}}],[\"无重复字符的最长子串\",{\"1\":{\"41\":1}}],[\"无则读取缓存\",{\"1\":{\"33\":1}}],[\"字符串最长的不重复子串\",{\"0\":{\"41\":1}}],[\"字节大概问的就这些\",{\"1\":{\"27\":1}}],[\"字节一面\",{\"0\":{\"23\":1}}],[\"该题求的只是公共前缀\",{\"1\":{\"40\":1}}],[\"该文章是我个人在平台上进行刷题得到的一些感悟\",{\"1\":{\"31\":1}}],[\"力扣\",{\"1\":{\"40\":1,\"41\":1,\"42\":1}}],[\"查找数组公共前缀\",{\"0\":{\"40\":1}}],[\"查缓存\",{\"1\":{\"32\":1}}],[\"匹配失败直接false\",{\"1\":{\"39\":1}}],[\"否则弹出一个进行匹配\",{\"1\":{\"39\":1}}],[\"var\",{\"1\":{\"39\":1,\"40\":1,\"41\":1,\"42\":1}}],[\"vue\",{\"0\":{\"37\":1}}],[\"vuejs\",{\"1\":{\"14\":1}}],[\"vue3\",{\"1\":{\"2\":2}}],[\"针对对象和数组分别进行判断递归进行组合\",{\"1\":{\"38\":1}}],[\"针对于非简单请求的一个安全操作\",{\"1\":{\"34\":1}}],[\"针对于大佬文章进对自己知识点的一个补充\",{\"1\":{\"31\":1}}],[\"思路\",{\"1\":{\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":2,\"43\":3}}],[\"对象扁平化\",{\"0\":{\"38\":1}}],[\"对于css3我并不是很熟\",{\"1\":{\"34\":1}}],[\"对于一些那种列表类型\",{\"1\":{\"35\":1}}],[\"对于一些工具的封装\",{\"1\":{\"22\":1}}],[\"对于一个盒子左中右\",{\"1\":{\"25\":1}}],[\"对于我这种flex重度用户来说\",{\"1\":{\"22\":1}}],[\"发布订阅模式\",{\"1\":{\"37\":1}}],[\"观察者模式\",{\"1\":{\"37\":1}}],[\"浏览器事件循环\",{\"1\":{\"37\":1}}],[\"利用哈希进行遍历搜索\",{\"1\":{\"42\":1}}],[\"利用栈进行一个回滚操作进行判断\",{\"1\":{\"39\":1}}],[\"利用object\",{\"1\":{\"38\":1}}],[\"利用浏览器事件循环进行塞入回调\",{\"1\":{\"37\":1}}],[\"利用this指向改变的原理\",{\"1\":{\"36\":1}}],[\"dom\",{\"1\":{\"37\":1}}],[\"descritption\",{\"1\":{\"15\":1}}],[\"它可以监听\",{\"1\":{\"37\":1}}],[\"优先想办法把需要执行的事件插入到微任务队列\",{\"1\":{\"37\":1}}],[\"简而言之\",{\"1\":{\"37\":1}}],[\"简单的dp\",{\"1\":{\"28\":1}}],[\"原理\",{\"0\":{\"37\":1}}],[\"原型和原型链\",{\"1\":{\"22\":1}}],[\"箭头函数和普通函数的区别\",{\"1\":{\"36\":1}}],[\"构造哈希\",{\"1\":{\"39\":1}}],[\"构造器本身是指向自己的\",{\"1\":{\"36\":1}}],[\"构建渲染树\",{\"1\":{\"32\":1}}],[\"改变构造器的指向\",{\"1\":{\"36\":1}}],[\"改变原型的指向\",{\"1\":{\"36\":1}}],[\"本质是this指向改变从而进行值的赋予\",{\"1\":{\"36\":1}}],[\"调用父类构造方法\",{\"1\":{\"36\":1}}],[\"更新子类构造函数的指向\",{\"1\":{\"36\":1}}],[\"更别说我面对的大部分是后台这类的了\",{\"1\":{\"28\":1}}],[\"子类负责调用父类的构造方法\",{\"1\":{\"36\":1}}],[\"子序列问题\",{\"0\":{\"11\":1},\"2\":{\"13\":1}}],[\"寄生组合继承\",{\"1\":{\"36\":1}}],[\"||\",{\"1\":{\"36\":1,\"39\":2}}],[\"通过call或者bind或者apply进行实例化构造\",{\"1\":{\"36\":1}}],[\"通过判断一些字段进行验证缓存是否失效\",{\"1\":{\"33\":1}}],[\"其次才是其他任务队列\",{\"1\":{\"37\":1}}],[\"其实还可以引出原型链\",{\"1\":{\"36\":1}}],[\"其实普通的obj也可以\",{\"1\":{\"36\":1}}],[\"其中覆盖测试有\",{\"1\":{\"8\":1}}],[\"其中原因附带什么条件可以得出什么结果\",{\"1\":{\"7\":1}}],[\"其中取法规则如下\",{\"1\":{\"7\":1}}],[\"其中黑盒只有动态测试\",{\"1\":{\"6\":1}}],[\"之所以这么用\",{\"1\":{\"36\":1}}],[\"进行创建一个新的对象\",{\"1\":{\"36\":1}}],[\"以及其他几种继承的缺点\",{\"1\":{\"36\":1}}],[\"以fn的原型为基础\",{\"1\":{\"36\":1}}],[\"以一个现有对象为原型\",{\"1\":{\"36\":1}}],[\"以一个现有对象作为原型\",{\"1\":{\"36\":1}}],[\"官方解释\",{\"1\":{\"36\":1}}],[\"创建一个新对象\",{\"1\":{\"36\":2}}],[\"除了事件代理\",{\"1\":{\"35\":1}}],[\"除开在\",{\"1\":{\"21\":1}}],[\"把\",{\"1\":{\"35\":1}}],[\"把事假循环玩明白随便答\",{\"1\":{\"24\":1}}],[\"由于每个事件处理器都会占用一定的内存\",{\"1\":{\"35\":1}}],[\"由于我简历太\",{\"1\":{\"20\":1}}],[\"事件代理\",{\"0\":{\"35\":1}}],[\"事件循环的题\",{\"0\":{\"24\":1}}],[\"合成层啊啥啥啥的\",{\"1\":{\"34\":1}}],[\"什么渲染层啊\",{\"1\":{\"34\":1}}],[\"解决方法就是避免抢占\",{\"1\":{\"34\":1}}],[\"从而得到一个有序数组\",{\"1\":{\"42\":1}}],[\"从而导致页面看起来卡顿\",{\"1\":{\"34\":1}}],[\"从\",{\"1\":{\"42\":1}}],[\"从输入\",{\"1\":{\"32\":1}}],[\"他与盒子的样式有关系\",{\"1\":{\"34\":1}}],[\"他笑了笑说\",{\"1\":{\"26\":1}}],[\"重新填色\",{\"1\":{\"34\":1}}],[\"重绘\",{\"1\":{\"34\":1}}],[\"重在思路嘛\",{\"1\":{\"26\":1}}],[\"内外边距等等\",{\"1\":{\"34\":1}}],[\"内心很慌\",{\"1\":{\"26\":1}}],[\"位置\",{\"1\":{\"34\":1}}],[\"位置返回\",{\"1\":{\"26\":1}}],[\"回流\",{\"1\":{\"34\":1}}],[\"回流一定会引发重绘\",{\"1\":{\"34\":1}}],[\"回流和重绘会导致性能下降的原因可以归咎于他会抢占浏览器主线程的运行时机\",{\"1\":{\"34\":1}}],[\"回流和重绘\",{\"1\":{\"34\":1}}],[\"回想起来也不是很难\",{\"1\":{\"27\":1}}],[\"阮一峰的网络日志\",{\"1\":{\"34\":1}}],[\"跨域资源共享\",{\"1\":{\"34\":1}}],[\"防止一些没必要的流量浪费\",{\"1\":{\"34\":1}}],[\"而询问请求是一个优化策略\",{\"1\":{\"34\":1}}],[\"而且\",{\"1\":{\"27\":1}}],[\"再进行发送实际的请求\",{\"1\":{\"34\":1}}],[\"会返回100\",{\"1\":{\"34\":1}}],[\"会个vue3基本上无脑梭就行啦\",{\"1\":{\"2\":1}}],[\"询问后如果允许\",{\"1\":{\"34\":1}}],[\"询问请求\",{\"1\":{\"34\":2}}],[\"避免浪费资源的一次询问操作\",{\"1\":{\"34\":1}}],[\"允不允许跨域\",{\"1\":{\"34\":1}}],[\"预检请求时浏览器行为\",{\"1\":{\"34\":1}}],[\"预检请求\",{\"1\":{\"34\":1}}],[\"预检请求和询问请求\",{\"0\":{\"34\":1}}],[\"预览图\",{\"1\":{\"16\":1}}],[\"补充\",{\"1\":{\"36\":1}}],[\"补充三\",{\"1\":{\"34\":1}}],[\"补充二\",{\"0\":{\"34\":1}}],[\"补充一\",{\"0\":{\"33\":1}}],[\"用一个删一个\",{\"1\":{\"43\":1}}],[\"用过则接着选\",{\"1\":{\"43\":1}}],[\"用哈希值进行比较\",{\"1\":{\"33\":1}}],[\"用修改时间进行比较\",{\"1\":{\"33\":1}}],[\"客户端收到后\",{\"1\":{\"34\":1}}],[\"客户端进行请求时\",{\"1\":{\"33\":1}}],[\"客户端与服务端进行协商\",{\"1\":{\"33\":1}}],[\"顾名思义\",{\"1\":{\"33\":1}}],[\"协商缓存是由客户端进行发起的\",{\"1\":{\"33\":1}}],[\"协商缓存\",{\"1\":{\"33\":1}}],[\"缓存本身其实是没失效\",{\"1\":{\"33\":1}}],[\"缓存分为\",{\"1\":{\"33\":1}}],[\"pop\",{\"1\":{\"39\":1}}],[\"push\",{\"1\":{\"39\":1}}],[\"public\",{\"1\":{\"33\":1}}],[\"play\",{\"1\":{\"36\":1}}],[\"parent\",{\"1\":{\"36\":4}}],[\"prototype\",{\"1\":{\"36\":5}}],[\"promise\",{\"1\":{\"24\":1,\"37\":2}}],[\"private\",{\"1\":{\"33\":1}}],[\"press\",{\"1\":{\"14\":1}}],[\"失效则重新请求并缓存\",{\"1\":{\"33\":1}}],[\"强制缓存是由服务器进行发起的\",{\"1\":{\"33\":1}}],[\"强制缓存\",{\"1\":{\"33\":2}}],[\"强制缓存和协商缓存\",{\"0\":{\"33\":1}}],[\"到看到页面发生了什么\",{\"1\":{\"32\":1}}],[\"史上最详细的经典面试题\",{\"1\":{\"32\":1}}],[\"详解\",{\"1\":{\"34\":1}}],[\"详解答案\",{\"1\":{\"31\":1}}],[\"详细请看\",{\"1\":{\"32\":1}}],[\"关闭\",{\"1\":{\"32\":1}}],[\"关于this指向的改变\",{\"1\":{\"36\":1}}],[\"关于\",{\"0\":{\"36\":1}}],[\"关于海投\",{\"0\":{\"21\":1}}],[\"关于我第一次面试的这件事\",{\"0\":{\"19\":1}}],[\"渲染\",{\"1\":{\"32\":1}}],[\"连接\",{\"1\":{\"32\":2}}],[\"域名解析\",{\"1\":{\"32\":1}}],[\"的不重复随机数组\",{\"0\":{\"43\":1}}],[\"的变化\",{\"1\":{\"37\":1}}],[\"的输入到浏览器解析的一系列事件\",{\"0\":{\"32\":1}}],[\"的博客\",{\"1\":{\"19\":1,\"31\":1}}],[\"url\",{\"0\":{\"32\":1},\"1\":{\"32\":1}}],[\"github\",{\"1\":{\"31\":1}}],[\"juejin\",{\"1\":{\"31\":1,\"32\":1}}],[\"jsweeta\",{\"1\":{\"31\":1}}],[\"jsweet\",{\"1\":{\"19\":1,\"31\":1}}],[\"掘金\",{\"1\":{\"31\":1,\"32\":1}}],[\"最新的前端大厂面经\",{\"1\":{\"31\":1}}],[\"最长公共前缀\",{\"1\":{\"40\":1}}],[\"最长公共子序列\",{\"1\":{\"11\":1}}],[\"最长重复子数组\",{\"1\":{\"11\":1}}],[\"文章原链接\",{\"1\":{\"31\":1}}],[\"欢迎大家指点\",{\"1\":{\"31\":1}}],[\"欢迎加我\",{\"1\":{\"4\":1}}],[\"若有问题\",{\"1\":{\"31\":1}}],[\"若函数有n个参数\",{\"1\":{\"7\":1}}],[\"有则重新请求\",{\"1\":{\"33\":1}}],[\"有效期秒数\",{\"1\":{\"33\":1}}],[\"有效期\",{\"1\":{\"33\":1}}],[\"有兴趣的可以看看\",{\"1\":{\"31\":1}}],[\"有面试\",{\"1\":{\"21\":1}}],[\"刷题笔记\",{\"0\":{\"30\":1}}],[\"互相交流题目的思路~\",{\"1\":{\"28\":1}}],[\"互斥\",{\"1\":{\"7\":1}}],[\"后续补上\",{\"1\":{\"35\":1}}],[\"后期补上\",{\"1\":{\"34\":1}}],[\"后期会开始抓着薄弱项慢慢去补\",{\"1\":{\"28\":1}}],[\"后两个更倾向于真实业务测试\",{\"1\":{\"7\":1}}],[\"慢慢去学习\",{\"1\":{\"28\":1}}],[\"或者不熟的\",{\"1\":{\"28\":1}}],[\"遍历\",{\"1\":{\"28\":1}}],[\"暴搜\",{\"1\":{\"28\":1}}],[\"贪心等我都能写的很快\",{\"1\":{\"28\":1}}],[\"一样\",{\"1\":{\"43\":1}}],[\"一样是用一个删一个\",{\"1\":{\"43\":1}}],[\"一系列可能会导致盒子布局改变的都会触发回流\",{\"1\":{\"34\":1}}],[\"一步步完善自己\",{\"1\":{\"28\":1}}],[\"一遇见没写过\",{\"1\":{\"28\":1}}],[\"一个简单的dfs我一下子就能秒了\",{\"1\":{\"28\":1}}],[\"一起学习\",{\"1\":{\"4\":1}}],[\"一起努力\",{\"1\":{\"1\":1}}],[\"就可以进行一个事件代理\",{\"1\":{\"35\":1}}],[\"就很痛苦\",{\"1\":{\"28\":1}}],[\"就跟我写算法一样\",{\"1\":{\"28\":1}}],[\"就是遍历一遍拿到链表长度\",{\"1\":{\"26\":1}}],[\"换个地方锻炼自己\",{\"1\":{\"28\":1}}],[\"想去扩展自己\",{\"1\":{\"28\":1}}],[\"却忘一干二净\",{\"1\":{\"28\":1}}],[\"久而久之对于这种本来应该是很基础的东西\",{\"1\":{\"28\":1}}],[\"经历的有点多\",{\"1\":{\"28\":1}}],[\"八股占比还是很多的\",{\"1\":{\"28\":1}}],[\"总结\",{\"0\":{\"28\":1}}],[\"总之\",{\"1\":{\"1\":1}}],[\"技多不压身嘛\",{\"1\":{\"27\":1}}],[\"虽然大部分是八股\",{\"1\":{\"27\":1}}],[\"需要补哪\",{\"1\":{\"27\":1}}],[\"让我意识到我本身缺陷在哪\",{\"1\":{\"27\":1}}],[\"让每个语句都执行\",{\"1\":{\"8\":1}}],[\"还可以利用防抖和节流进行优化\",{\"1\":{\"35\":1}}],[\"还得旷课\",{\"1\":{\"27\":1}}],[\"还问了选择器\",{\"1\":{\"23\":1}}],[\"真实请求\",{\"1\":{\"34\":1}}],[\"真要实习\",{\"1\":{\"27\":1}}],[\"真的很简单\",{\"1\":{\"22\":1}}],[\"嘿嘿\",{\"1\":{\"27\":1}}],[\"至少三个面试\",{\"1\":{\"27\":1}}],[\"至少不是简历挂\",{\"1\":{\"21\":1}}],[\"同理\",{\"1\":{\"34\":1}}],[\"同滴滴面试一样\",{\"1\":{\"27\":1}}],[\"同上例子\",{\"1\":{\"8\":1}}],[\"没有问计算机系统\",{\"1\":{\"27\":1}}],[\"没有问框架源码\",{\"1\":{\"27\":1}}],[\"没有问网络\",{\"1\":{\"27\":1}}],[\"没有追究我\",{\"1\":{\"25\":1}}],[\"z\",{\"1\":{\"27\":2}}],[\"zh\",{\"1\":{\"14\":1}}],[\"zhihu\",{\"1\":{\"7\":1}}],[\"y\",{\"1\":{\"27\":2}}],[\"xxx\",{\"1\":{\"36\":2}}],[\"x\",{\"1\":{\"27\":2}}],[\"多参数柯里化\",{\"1\":{\"27\":1}}],[\"题目链接\",{\"1\":{\"39\":1,\"40\":1,\"41\":1,\"42\":1}}],[\"题目类似\",{\"1\":{\"11\":1}}],[\"题解我丢着了\",{\"1\":{\"27\":1}}],[\"好慌\",{\"1\":{\"27\":1}}],[\"沉默震耳欲聋\",{\"1\":{\"27\":1}}],[\"写的时候\",{\"1\":{\"27\":1}}],[\"写出来\",{\"1\":{\"27\":1}}],[\"写测试用例\",{\"1\":{\"8\":1}}],[\"并且依次将取出来的值替换掉\",{\"1\":{\"43\":1}}],[\"并且为此设计测试用例\",{\"1\":{\"7\":1}}],[\"并没有把sum\",{\"1\":{\"27\":1}}],[\"只写了两层\",{\"1\":{\"27\":1}}],[\"函数柯里化\",{\"0\":{\"27\":1}}],[\"能跑就行\",{\"1\":{\"26\":1}}],[\"提了一嘴这种写法\",{\"1\":{\"26\":1}}],[\"此时要么提前存入数组\",{\"1\":{\"26\":1}}],[\"个消耗\",{\"1\":{\"35\":1}}],[\"个消耗转换为\",{\"1\":{\"35\":1}}],[\"个元素\",{\"0\":{\"26\":1}}],[\"个人博客\",{\"1\":{\"31\":1}}],[\"个人爱好\",{\"0\":{\"3\":1}}],[\"个人技能\",{\"0\":{\"2\":1}}],[\"keys\",{\"1\":{\"38\":1}}],[\"k\",{\"0\":{\"26\":1},\"1\":{\"26\":2}}],[\"链表的倒数第\",{\"0\":{\"26\":1}}],[\"毕竟我是flex重度用户\",{\"1\":{\"25\":1}}],[\"毕竟是第一次\",{\"1\":{\"21\":1}}],[\"中间自适应\",{\"1\":{\"25\":1}}],[\"中间值\",{\"1\":{\"7\":1}}],[\"三个请求就会有三个响应\",{\"1\":{\"34\":1}}],[\"三栏布局\",{\"0\":{\"25\":1}}],[\"三明治集成\",{\"1\":{\"9\":1}}],[\"第三步\",{\"1\":{\"36\":1}}],[\"第三问\",{\"0\":{\"26\":1}}],[\"第二步\",{\"1\":{\"36\":1}}],[\"第二题\",{\"0\":{\"25\":1}}],[\"第一步\",{\"1\":{\"36\":1}}],[\"第一次询问是不带请求体\",{\"1\":{\"34\":1}}],[\"第一题\",{\"0\":{\"24\":1}}],[\"第四问\",{\"0\":{\"27\":1}}],[\"结果\",{\"1\":{\"24\":1}}],[\"结果也很明显\",{\"1\":{\"22\":1}}],[\"41\",{\"1\":{\"42\":1}}],[\"4\",{\"0\":{\"37\":1,\"41\":1},\"1\":{\"24\":2,\"42\":1}}],[\"304\",{\"1\":{\"33\":1}}],[\"3\",{\"0\":{\"36\":1,\"40\":1},\"1\":{\"24\":2,\"27\":4,\"41\":1,\"42\":1,\"43\":1}}],[\"<=\",{\"1\":{\"42\":1}}],[\"<\",{\"1\":{\"24\":1,\"27\":1,\"41\":1}}],[\"===\",{\"1\":{\"24\":1,\"36\":2,\"39\":5}}],[\"=\",{\"1\":{\"24\":1,\"27\":3,\"36\":8,\"39\":3,\"40\":2,\"41\":5,\"42\":4}}],[\"=>\",{\"1\":{\"24\":3,\"27\":2,\"36\":2}}],[\"nums\",{\"1\":{\"42\":3}}],[\"nexttick\",{\"0\":{\"37\":1}}],[\"new\",{\"1\":{\"24\":1,\"36\":3}}],[\"name\",{\"1\":{\"36\":6}}],[\"n\",{\"0\":{\"43\":1},\"1\":{\"35\":1,\"42\":1}}],[\"none\",{\"1\":{\"33\":1}}],[\"no\",{\"1\":{\"33\":2}}],[\"nowcoder\",{\"1\":{\"22\":2}}],[\"longestcommonprefix\",{\"1\":{\"40\":1}}],[\"log\",{\"1\":{\"24\":5,\"27\":1,\"36\":2}}],[\"left++\",{\"1\":{\"41\":1}}],[\"left就往前\",{\"1\":{\"41\":1}}],[\"left\",{\"1\":{\"41\":5}}],[\"leetcode\",{\"1\":{\"40\":1,\"41\":1,\"42\":1}}],[\"lengthoflongestsubstring\",{\"1\":{\"41\":1}}],[\"length\",{\"1\":{\"26\":1,\"27\":2,\"39\":1,\"40\":1,\"41\":1,\"42\":1}}],[\"let\",{\"1\":{\"24\":1,\"39\":3,\"40\":3,\"41\":1,\"42\":2}}],[\"la\",{\"1\":{\"20\":1}}],[\"substring\",{\"1\":{\"40\":1,\"41\":1}}],[\"sum\",{\"1\":{\"27\":1}}],[\"s\",{\"1\":{\"39\":2,\"41\":4}}],[\"set\",{\"1\":{\"42\":3}}],[\"setimmediate和settimeout\",{\"1\":{\"37\":1}}],[\"settimeout\",{\"1\":{\"24\":1}}],[\"say\",{\"1\":{\"36\":1}}],[\"since\",{\"1\":{\"33\":1}}],[\"str\",{\"1\":{\"40\":2}}],[\"strs\",{\"1\":{\"40\":4}}],[\"stack\",{\"1\":{\"39\":4}}],[\"state\",{\"1\":{\"39\":2}}],[\"startswith\",{\"1\":{\"40\":1}}],[\"star\",{\"1\":{\"15\":1}}],[\"store\",{\"1\":{\"33\":1}}],[\"人的方法\",{\"1\":{\"24\":1}}],[\"人\",{\"1\":{\"24\":1}}],[\"是考虑到当前这个fn可能继承了其他的\",{\"1\":{\"36\":1}}],[\"是一个浏览器的行为\",{\"1\":{\"34\":1}}],[\"是个人准备不足\",{\"1\":{\"27\":1}}],[\"是flex重度使用者\",{\"1\":{\"23\":1}}],[\"是否收藏\",{\"1\":{\"15\":1}}],[\"包括call\",{\"1\":{\"36\":1}}],[\"包括优先级这些\",{\"1\":{\"23\":1}}],[\"包含\",{\"1\":{\"7\":1}}],[\"问了一些什么position的属性\",{\"1\":{\"23\":1}}],[\"项目问我是丝毫不带一点慌的\",{\"1\":{\"23\":1}}],[\"抓了我项目里的几个点问了一下\",{\"1\":{\"23\":1}}],[\"牛客网\",{\"1\":{\"22\":2}}],[\"两个指针\",{\"1\":{\"41\":1}}],[\"两个面评还可以\",{\"1\":{\"27\":1}}],[\"两轮面试我都贴下面了\",{\"1\":{\"22\":1}}],[\"两位面试官都很友好\",{\"1\":{\"22\":1}}],[\"吧\",{\"1\":{\"22\":1}}],[\"那么答案必是n\",{\"1\":{\"42\":1}}],[\"那么可以利用它实现寄生组合继承\",{\"1\":{\"36\":1}}],[\"那么就不会有这个操作\",{\"1\":{\"34\":1}}],[\"那么就可能读取不到最新数据\",{\"1\":{\"33\":1}}],[\"那么就可能会出现\",{\"1\":{\"33\":1}}],[\"那就来点\",{\"1\":{\"22\":1}}],[\"那我们肯定能玩的好\",{\"1\":{\"3\":1}}],[\"所以需要更新一下\",{\"1\":{\"36\":1}}],[\"所以需要以他的原型为原型\",{\"1\":{\"36\":1}}],[\"所以也不敢多说什么\",{\"1\":{\"34\":1}}],[\"所以会有六个tcp数据包\",{\"1\":{\"34\":1}}],[\"所以接下来就先不投简历了\",{\"1\":{\"27\":1}}],[\"所以整个面试过程很舒服\",{\"1\":{\"22\":1}}],[\"所以他是一定包含了前两个的覆盖\",{\"1\":{\"8\":1}}],[\"面试\",{\"2\":{\"29\":1,\"44\":1}}],[\"面试官很好\",{\"1\":{\"25\":1}}],[\"面试官就问什么\",{\"1\":{\"22\":1}}],[\"面试跟我在牛客上的看的面经差不多\",{\"1\":{\"22\":1}}],[\"比如开启一些gpu加速之类的东西\",{\"1\":{\"34\":1}}],[\"比如宽高\",{\"1\":{\"34\":1}}],[\"比如最近看到的子序列问题\",{\"1\":{\"28\":1}}],[\"比如什么作用域和作用域链\",{\"1\":{\"22\":1}}],[\"比如我写了一些优化的东西\",{\"1\":{\"22\":1}}],[\"巴拉巴拉能说一大把\",{\"1\":{\"22\":1}}],[\"开始先来个自我介绍\",{\"1\":{\"22\":1}}],[\"开启了海投\",{\"1\":{\"20\":1}}],[\"应该是寄了\",{\"1\":{\"22\":1}}],[\"应该是运气好\",{\"1\":{\"21\":1}}],[\"今天还没出结果\",{\"1\":{\"22\":1}}],[\"日常实习只有两面\",{\"1\":{\"22\":1}}],[\"滴滴二面\",{\"1\":{\"22\":1}}],[\"滴滴的面试并不是很难\",{\"1\":{\"22\":1}}],[\"滴滴一面\",{\"0\":{\"22\":1},\"1\":{\"22\":1}}],[\"讲真的\",{\"1\":{\"22\":1}}],[\"二面问了二十多分钟的项目\",{\"1\":{\"22\":1}}],[\"二面就有点小痛苦了\",{\"1\":{\"22\":1}}],[\"二面\",{\"0\":{\"22\":1}}],[\"遇到了个字节内推和滴滴内推的\",{\"1\":{\"21\":1}}],[\"上丢\",{\"1\":{\"21\":1}}],[\"上基本上没人鸟我这个蒻冀\",{\"1\":{\"21\":1}}],[\"但是这个删是类似于冒泡算法一样\",{\"1\":{\"43\":1}}],[\"但是由于原型改变了\",{\"1\":{\"36\":1}}],[\"但是都需要进行事件响应的\",{\"1\":{\"35\":1}}],[\"但是重绘不会引发回流\",{\"1\":{\"34\":1}}],[\"但是假如服务器自己更改了\",{\"1\":{\"33\":1}}],[\"但是我却只是拿着滚瓜烂熟的思想去写的\",{\"1\":{\"28\":1}}],[\"但是有些确实可以多学学\",{\"1\":{\"27\":1}}],[\"但是一时半会不晓得怎么递归了qwq\",{\"1\":{\"27\":1}}],[\"但是一下子投上瘾了\",{\"1\":{\"21\":1}}],[\"但是具体细节不知道咋写了\",{\"1\":{\"25\":1}}],[\"但是还未理清\",{\"1\":{\"11\":1}}],[\"bind\",{\"1\":{\"36\":1}}],[\"boss\",{\"1\":{\"21\":2}}],[\"b>0\",{\"1\":{\"8\":1}}],[\"直接简历就挂了\",{\"1\":{\"20\":1}}],[\"被这个大牛内推后\",{\"1\":{\"20\":1}}],[\"在业务不断添加的情况下\",{\"1\":{\"28\":1}}],[\"在进行海投后\",{\"1\":{\"21\":1}}],[\"在他的建议下\",{\"1\":{\"20\":1}}],[\"在一个水群的一天\",{\"1\":{\"20\":1}}],[\"于是\",{\"1\":{\"20\":1}}],[\"然后逐步递减随机区间\",{\"1\":{\"43\":1}}],[\"然后判断索引与值是否相等\",{\"1\":{\"42\":1}}],[\"然后记录最大值\",{\"1\":{\"41\":1}}],[\"然后执行对应回调\",{\"1\":{\"37\":1}}],[\"然后进行一次函数调用\",{\"1\":{\"36\":1}}],[\"然后脑子就发抽了\",{\"1\":{\"27\":1}}],[\"然后返回arr\",{\"1\":{\"26\":1}}],[\"然后也用到了媒体查询\",{\"1\":{\"25\":1}}],[\"然后回答完肯定会问事假循环的~\",{\"1\":{\"24\":1}}],[\"然后就到了笔试环节~\",{\"1\":{\"23\":1}}],[\"然后就到了经典八股了\",{\"1\":{\"22\":1}}],[\"然后我就噶了\",{\"1\":{\"23\":1}}],[\"然后我就约到面试了\",{\"1\":{\"21\":1}}],[\"然后他问我个flex是由哪三个属性组合的\",{\"1\":{\"23\":1}}],[\"然后他在群里说他现在的部门还有个\",{\"1\":{\"20\":1}}],[\"然后应用场景等等\",{\"1\":{\"23\":1}}],[\"然后这位面试官也喜欢问\",{\"1\":{\"23\":1}}],[\"然后面试官突然来一句\",{\"1\":{\"22\":1}}],[\"然后八股文看的少\",{\"1\":{\"22\":1}}],[\"然后开始抓我项目里面的细节问\",{\"1\":{\"22\":1}}],[\"然后被锁住了\",{\"1\":{\"20\":1}}],[\"然后嘛\",{\"1\":{\"2\":1}}],[\"太强啦\",{\"1\":{\"20\":1}}],[\"为什么说他是大牛\",{\"1\":{\"20\":1}}],[\"我只是小菜鸡\",{\"1\":{\"31\":1}}],[\"我相信大部分人也是这样\",{\"1\":{\"28\":1}}],[\"我个人在工作室开发来说\",{\"1\":{\"28\":1}}],[\"我目前学校大三不放人\",{\"1\":{\"27\":1}}],[\"我知道要递归\",{\"1\":{\"27\":1}}],[\"我们一起再学学\",{\"1\":{\"27\":1}}],[\"我\",{\"1\":{\"26\":1}}],[\"我后面问面评的时候\",{\"1\":{\"26\":1}}],[\"我这个写法给面试官干沉默了\",{\"1\":{\"26\":1}}],[\"我是flex直接弄的\",{\"1\":{\"25\":1}}],[\"我八股拉\",{\"1\":{\"23\":1}}],[\"我内心是裂开的\",{\"1\":{\"22\":1}}],[\"我看你一面没问过\",{\"1\":{\"22\":1}}],[\"我丝毫不慌\",{\"1\":{\"22\":1}}],[\"我还去了牛客上头\",{\"1\":{\"21\":1}}],[\"我还在学校苦逼\",{\"1\":{\"20\":1}}],[\"我找上了这位大牛\",{\"1\":{\"20\":1}}],[\"我刚好前两天查了我在字节的流程锁以及解了\",{\"1\":{\"20\":1}}],[\"我认识了一个正在字节实习大牛\",{\"1\":{\"20\":1}}],[\"我比较喜欢函数式编程的风格\",{\"1\":{\"2\":1}}],[\"元信息\",{\"2\":{\"18\":1}}],[\"侧边栏顺序\",{\"1\":{\"16\":1}}],[\"标签\",{\"1\":{\"15\":1}}],[\"标题\",{\"1\":{\"15\":1}}],[\"分类\",{\"1\":{\"15\":1}}],[\"描述\",{\"1\":{\"15\":1}}],[\"true\",{\"1\":{\"39\":1}}],[\"t\",{\"1\":{\"39\":6}}],[\"this\",{\"1\":{\"36\":5}}],[\"this就指向\",{\"1\":{\"36\":1}}],[\"then可以直接将事件推入微任务队列尾部\",{\"1\":{\"37\":1}}],[\"then\",{\"1\":{\"24\":1}}],[\"theme\",{\"1\":{\"14\":1}}],[\"typeof\",{\"1\":{\"36\":2}}],[\"tcp\",{\"1\":{\"32\":2}}],[\"tag\",{\"1\":{\"15\":1}}],[\"title\",{\"1\":{\"15\":1}}],[\"常用项\",{\"0\":{\"15\":1}}],[\"hc\",{\"1\":{\"20\":1}}],[\"http\",{\"1\":{\"32\":1}}],[\"https\",{\"1\":{\"14\":1}}],[\"html\",{\"1\":{\"14\":1}}],[\"hope\",{\"1\":{\"14\":1}}],[\"hhh\",{\"1\":{\"2\":1,\"20\":1}}],[\"配置文件\",{\"0\":{\"47\":1}}],[\"配置化表单和配置化表格这些\",{\"1\":{\"23\":1}}],[\"配置\",{\"0\":{\"14\":1},\"2\":{\"17\":1}}],[\"firstmissingpositive\",{\"1\":{\"42\":1}}],[\"fn\",{\"1\":{\"27\":5,\"36\":4}}],[\"function\",{\"1\":{\"27\":3,\"36\":4,\"39\":1,\"40\":1,\"41\":1,\"42\":1}}],[\"for\",{\"1\":{\"24\":1,\"39\":1,\"40\":2,\"42\":2}}],[\"frontmatter\",{\"0\":{\"14\":1},\"1\":{\"14\":1}}],[\"false的所有组合\",{\"1\":{\"8\":1}}],[\"false\",{\"1\":{\"8\":2,\"39\":2}}],[\"动态规划\",{\"2\":{\"13\":1}}],[\"动态测试\",{\"0\":{\"6\":1},\"1\":{\"6\":1}}],[\"算法给的也不是那么难\",{\"1\":{\"27\":1}}],[\"算法\",{\"0\":{\"46\":1},\"2\":{\"12\":1}}],[\"算是一个对于我自己所学的一个归纳\",{\"1\":{\"1\":1}}],[\"先取一个出来\",{\"1\":{\"43\":1}}],[\"先预检请求\",{\"1\":{\"34\":1}}],[\"先说顺序\",{\"1\":{\"34\":1}}],[\"先发个请求询问服务器数据是否有变化\",{\"1\":{\"33\":1}}],[\"先自我介绍和项目走一套\",{\"1\":{\"23\":1}}],[\"先贴链接\",{\"1\":{\"11\":1}}],[\"先画流程图\",{\"1\":{\"8\":1}}],[\"测试\",{\"2\":{\"10\":1}}],[\"测试复习\",{\"0\":{\"5\":1}}],[\"阿里云开发者社区\",{\"1\":{\"9\":1}}],[\"自底向上\",{\"1\":{\"9\":1}}],[\"children\",{\"1\":{\"36\":4}}],[\"create\",{\"0\":{\"36\":1},\"1\":{\"36\":1}}],[\"crud\",{\"1\":{\"28\":1}}],[\"call\",{\"1\":{\"36\":3}}],[\"catch\",{\"1\":{\"33\":1}}],[\"category\",{\"1\":{\"15\":1}}],[\"cache\",{\"1\":{\"33\":1}}],[\"cn\",{\"1\":{\"31\":1,\"32\":1}}],[\"curriedfn\",{\"1\":{\"27\":2}}],[\"curry\",{\"1\":{\"27\":2}}],[\"css\",{\"1\":{\"22\":2,\"23\":1}}],[\"csdn博客\",{\"1\":{\"9\":1}}],[\"cors\",{\"1\":{\"34\":1}}],[\"continue\",{\"1\":{\"39\":1}}],[\"continue的响应码\",{\"1\":{\"34\":1}}],[\"control\",{\"1\":{\"33\":1}}],[\"concat\",{\"1\":{\"27\":1}}],[\"constructor\",{\"1\":{\"36\":1}}],[\"const\",{\"1\":{\"27\":3,\"36\":2,\"42\":1}}],[\"console\",{\"1\":{\"24\":5,\"27\":1,\"36\":2}}],[\"config\",{\"1\":{\"14\":1}}],[\"com\",{\"1\":{\"7\":1,\"9\":1,\"22\":2,\"34\":1}}],[\"维维sanguine的博客\",{\"1\":{\"9\":1}}],[\"集成测试之自顶向下\",{\"1\":{\"9\":1}}],[\"集成测试\",{\"0\":{\"9\":1},\"1\":{\"9\":1}}],[\"按照路径给予测试用例\",{\"1\":{\"8\":1}}],[\"按照是否针对系统内部结构和具体实现算法的角度可分为\",{\"1\":{\"6\":1}}],[\"按照是否被执行可分为动态测试和静态测试\",{\"1\":{\"6\":1}}],[\"导出测试用例\",{\"1\":{\"8\":1}}],[\"计算圈复杂度\",{\"1\":{\"8\":1}}],[\"控制流图\",{\"1\":{\"8\":1}}],[\"画控制图\",{\"1\":{\"8\":1}}],[\"画流程图\",{\"1\":{\"7\":1,\"8\":1}}],[\"使用步骤\",{\"1\":{\"8\":1}}],[\"节点\",{\"1\":{\"8\":1}}],[\"边\",{\"1\":{\"8\":1}}],[\"边界值+\",{\"1\":{\"7\":1}}],[\"边界值分析\",{\"1\":{\"7\":1}}],[\"区域的个数\",{\"1\":{\"8\":1}}],[\"判断右边的是否在队列\",{\"1\":{\"41\":1}}],[\"判断括号字符串是否有效\",{\"0\":{\"39\":1}}],[\"判断节点\",{\"1\":{\"8\":1}}],[\"判定覆盖\",{\"1\":{\"8\":1}}],[\"圈复杂度\",{\"1\":{\"8\":1}}],[\"基本上是把我列在项目亮点里的全部提出来问了一遍\",{\"1\":{\"22\":1}}],[\"基本路径测试\",{\"1\":{\"8\":2}}],[\"基于等价类的条件下\",{\"1\":{\"7\":1}}],[\"每条路都走\",{\"1\":{\"8\":1}}],[\"每个条件\",{\"1\":{\"8\":1}}],[\"每个判断都取一次真假\",{\"1\":{\"8\":1}}],[\"路径覆盖\",{\"1\":{\"8\":1}}],[\"组合覆盖\",{\"1\":{\"8\":1}}],[\"条件组合情况\",{\"1\":{\"8\":1}}],[\"条件判定覆盖\",{\"1\":{\"8\":1}}],[\"条件覆盖\",{\"1\":{\"8\":1}}],[\"指的是if内部的判断取满true\",{\"1\":{\"8\":1}}],[\"要么在遍历到达第\",{\"1\":{\"26\":1}}],[\"要a和b这两个判断都取满true\",{\"1\":{\"8\":1}}],[\"要保证这个if的值取满true和false\",{\"1\":{\"8\":1}}],[\"要求\",{\"1\":{\"7\":1}}],[\"语句覆盖\",{\"1\":{\"8\":1}}],[\"知乎\",{\"1\":{\"7\":1}}],[\"完美诠释因果图与判定表法\",{\"1\":{\"7\":1}}],[\"备选事件\",{\"1\":{\"7\":1}}],[\"主要事件\",{\"1\":{\"7\":1}}],[\"主的是\",{\"1\":{\"2\":1}}],[\"场景法\",{\"1\":{\"7\":1}}],[\"抽取测试路径\",{\"1\":{\"7\":1}}],[\"绘制状态迁移树\",{\"1\":{\"7\":1}}],[\"绘制迁移图\",{\"1\":{\"7\":1}}],[\"明确状态节点\",{\"1\":{\"7\":1}}],[\"状态图\",{\"1\":{\"7\":1}}],[\"与和或\",{\"1\":{\"7\":1}}],[\"~\",{\"1\":{\"7\":1}}],[\"非\",{\"1\":{\"7\":1}}],[\"恒等\",{\"1\":{\"7\":1}}],[\"mutationobserver\",{\"1\":{\"37\":1}}],[\"mynew\",{\"1\":{\"36\":1}}],[\"myfn\",{\"1\":{\"27\":2}}],[\"mdn\",{\"1\":{\"36\":1}}],[\"match\",{\"1\":{\"33\":1}}],[\"max\",{\"1\":{\"33\":1}}],[\"modified\",{\"1\":{\"33\":1}}],[\"monorepo\",{\"1\":{\"22\":1}}],[\"m\",{\"1\":{\"7\":1}}],[\"屏蔽\",{\"1\":{\"7\":1}}],[\"right++\",{\"1\":{\"41\":2}}],[\"right\",{\"1\":{\"41\":8}}],[\"ruanyifeng\",{\"1\":{\"34\":1}}],[\"res\",{\"1\":{\"36\":4,\"40\":5,\"41\":5}}],[\"rest\",{\"1\":{\"36\":2}}],[\"resolve\",{\"1\":{\"24\":2}}],[\"return\",{\"1\":{\"27\":4,\"39\":3,\"40\":2,\"41\":1,\"42\":1}}],[\"r\",{\"1\":{\"7\":1}}],[\"of\",{\"1\":{\"39\":1,\"40\":2,\"42\":1}}],[\"obj\",{\"1\":{\"36\":3}}],[\"object\",{\"0\":{\"36\":1},\"1\":{\"36\":3}}],[\"ohh\",{\"1\":{\"20\":1}}],[\"order\",{\"1\":{\"16\":1}}],[\"o\",{\"1\":{\"7\":1}}],[\"唯一\",{\"1\":{\"7\":1}}],[\"includes\",{\"1\":{\"41\":1}}],[\"info\",{\"1\":{\"14\":1}}],[\"isvalid\",{\"1\":{\"39\":1}}],[\"io\",{\"1\":{\"31\":1}}],[\"if\",{\"1\":{\"24\":1,\"27\":1,\"33\":2,\"39\":3,\"40\":1,\"41\":2,\"42\":1}}],[\"i++\",{\"1\":{\"24\":1,\"42\":1}}],[\"i\",{\"1\":{\"7\":1,\"24\":3,\"40\":2,\"42\":6}}],[\"image\",{\"1\":{\"7\":3,\"16\":1}}],[\"else\",{\"1\":{\"39\":3,\"41\":2}}],[\"electron\",{\"1\":{\"2\":1}}],[\"etag\",{\"1\":{\"33\":1}}],[\"expires\",{\"1\":{\"33\":1}}],[\"ex\",{\"1\":{\"24\":2}}],[\"e\",{\"1\":{\"7\":1}}],[\"约束关系\",{\"1\":{\"7\":1}}],[\"找结果\",{\"1\":{\"7\":1}}],[\"找原因\",{\"1\":{\"7\":1}}],[\"找if\",{\"1\":{\"7\":1}}],[\"因为这里涉及到了关于浏览器针对渲染分层的一些知识\",{\"1\":{\"34\":1}}],[\"因为好像一下子真不晓得怎么写起来优雅了\",{\"1\":{\"26\":1}}],[\"因为我提前示弱了\",{\"1\":{\"23\":1}}],[\"因为问的基本上都是八股文\",{\"1\":{\"22\":1}}],[\"因为在牛客上乱搞\",{\"1\":{\"20\":1}}],[\"因为同样大三\",{\"1\":{\"20\":1}}],[\"因为接触这方面的项目比较多\",{\"1\":{\"2\":1}}],[\"因果关系\",{\"1\":{\"7\":1}}],[\"因果图\",{\"1\":{\"7\":1}}],[\"222\",{\"1\":{\"36\":1}}],[\"200\",{\"1\":{\"33\":1}}],[\"20231127193203639\",{\"1\":{\"7\":1}}],[\"20231127193101194\",{\"1\":{\"7\":1}}],[\"20231127194123118\",{\"1\":{\"7\":1}}],[\"2\",{\"0\":{\"35\":1,\"39\":1},\"1\":{\"8\":1,\"24\":2,\"27\":4,\"42\":2,\"43\":2}}],[\"2171077189\",{\"1\":{\"4\":1}}],[\"注意\",{\"1\":{\"7\":1,\"33\":1,\"34\":1}}],[\"+=\",{\"1\":{\"40\":1}}],[\"+\",{\"1\":{\"7\":1,\"8\":2,\"27\":3,\"42\":3}}],[\"可以利用startswith进行暴力求解\",{\"1\":{\"40\":1}}],[\"可选项\",{\"0\":{\"16\":1}}],[\"可由上所得\",{\"1\":{\"7\":1}}],[\"可能是js写多了的原因\",{\"1\":{\"2\":1}}],[\"求最少取值\",{\"1\":{\"7\":1}}],[\"例题2\",{\"1\":{\"7\":1}}],[\"例如上面例子\",{\"1\":{\"8\":1}}],[\"例如if\",{\"1\":{\"8\":1}}],[\"例如\",{\"1\":{\"7\":1}}],[\"七个\",{\"1\":{\"7\":1}}],[\"范围边界值\",{\"1\":{\"7\":1}}],[\">\",{\"1\":{\"7\":9,\"8\":1,\"34\":2,\"41\":1}}],[\"9999\",{\"1\":{\"24\":1}}],[\"9\",{\"1\":{\"7\":1}}],[\"5\",{\"0\":{\"42\":1},\"1\":{\"7\":1,\"24\":2}}],[\"0\",{\"1\":{\"7\":1,\"24\":1,\"39\":1,\"40\":3,\"41\":3,\"42\":1}}],[\"0<a<10\",{\"1\":{\"7\":1}}],[\"1的条件\",{\"1\":{\"42\":1}}],[\"14\",{\"1\":{\"40\":1}}],[\"111\",{\"1\":{\"36\":1}}],[\"11\",{\"1\":{\"7\":1}}],[\"10000\",{\"1\":{\"24\":1}}],[\"10\",{\"1\":{\"7\":1}}],[\"1\",{\"0\":{\"32\":1,\"38\":1},\"1\":{\"7\":4,\"8\":1,\"24\":2,\"27\":5,\"35\":1,\"40\":1,\"42\":6,\"43\":1}}],[\"取值为\",{\"1\":{\"7\":1}}],[\"设计测试用例\",{\"1\":{\"7\":1}}],[\"设计测试用例的时候进行采取边界值取法\",{\"1\":{\"7\":1}}],[\"设计与实现\",{\"1\":{\"2\":1}}],[\"寻找有效和无效等价类\",{\"1\":{\"7\":1}}],[\"等价类\",{\"1\":{\"7\":1}}],[\"白盒测试可分为覆盖测试和基本路径测试\",{\"1\":{\"8\":1}}],[\"白盒测试\",{\"0\":{\"8\":1}}],[\"白盒\",{\"1\":{\"6\":1}}],[\"白盒有静态和动态\",{\"1\":{\"6\":1}}],[\"黑盒测试\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"黑盒\",{\"1\":{\"6\":1}}],[\"代码质量度量\",{\"1\":{\"6\":1}}],[\"代码检查\",{\"1\":{\"6\":1}}],[\"静态结构分析\",{\"1\":{\"6\":1}}],[\"静态测试\",{\"0\":{\"6\":1},\"1\":{\"6\":1}}],[\"性能分析\",{\"1\":{\"6\":1}}],[\"覆盖率分析\",{\"1\":{\"6\":1}}],[\"接口测试\",{\"1\":{\"6\":1}}],[\"功能确认\",{\"1\":{\"6\":1}}],[\"号\",{\"1\":{\"4\":1}}],[\"apply都是进行一次包装使之当前的fn挂载到需要被指向的对象上\",{\"1\":{\"36\":1}}],[\"age\",{\"1\":{\"33\":1}}],[\"arguments\",{\"1\":{\"27\":1}}],[\"args\",{\"1\":{\"27\":4}}],[\"arr\",{\"1\":{\"26\":1}}],[\"author\",{\"1\":{\"14\":1}}],[\"aliyun\",{\"1\":{\"9\":1}}],[\"a>0和b>0的两个判断\",{\"1\":{\"8\":1}}],[\"a>0\",{\"1\":{\"8\":1}}],[\"a\",{\"1\":{\"4\":1,\"27\":2}}],[\"qq\",{\"1\":{\"4\":2}}],[\"qwq\",{\"1\":{\"1\":1,\"22\":2,\"23\":2,\"25\":1,\"26\":2,\"27\":2}}],[\"如何避免\",{\"1\":{\"34\":1}}],[\"如何找到我\",{\"0\":{\"4\":1}}],[\"如果是左则直接进入栈\",{\"1\":{\"39\":1}}],[\"如果有相等的了\",{\"1\":{\"41\":1}}],[\"如果有返回值会以返回值为实例对象\",{\"1\":{\"36\":1}}],[\"如果有想一起刷算法的可以加我\",{\"1\":{\"28\":1}}],[\"如果不考虑继承\",{\"1\":{\"36\":1}}],[\"如果可以脱离浏览器环境\",{\"1\":{\"34\":1}}],[\"如果宽度小于360px就换成上中下\",{\"1\":{\"25\":1}}],[\"如果你也喜欢前端\",{\"1\":{\"4\":1}}],[\"不会造成布局改变的\",{\"1\":{\"34\":1}}],[\"不想总在舒适圈呆着\",{\"1\":{\"28\":1}}],[\"不管是滴滴还是字节\",{\"1\":{\"28\":1}}],[\"不管只是个会使用的而已\",{\"1\":{\"2\":1}}],[\"不知宽高\",{\"1\":{\"23\":1}}],[\"不过我很满意\",{\"1\":{\"27\":1}}],[\"不过我好像也就这么个兴趣\",{\"1\":{\"3\":1}}],[\"不过也没说啥\",{\"1\":{\"26\":1}}],[\"不过出题者要是想\",{\"1\":{\"24\":1}}],[\"不过没加条件\",{\"1\":{\"23\":1}}],[\"不过问优化我估计就得噶\",{\"1\":{\"23\":1}}],[\"喜欢的话\",{\"1\":{\"3\":1}}],[\"你喜欢羽毛球吗\",{\"1\":{\"3\":1}}],[\"也叫做重新布局\",{\"1\":{\"34\":1}}],[\"也就是parent\",{\"1\":{\"36\":1}}],[\"也就是说\",{\"1\":{\"34\":1}}],[\"也就是所访问的服务器端\",{\"1\":{\"34\":1}}],[\"也就是sum\",{\"1\":{\"27\":1}}],[\"也就是功能测试\",{\"1\":{\"7\":1}}],[\"也是个\",{\"1\":{\"24\":1}}],[\"也是一顿折磨\",{\"1\":{\"23\":1}}],[\"也问了垂直居中\",{\"1\":{\"23\":1}}],[\"也喜欢编程\",{\"1\":{\"4\":1}}],[\"也了解过一点点点点点工程化的东西\",{\"1\":{\"2\":1}}],[\"也学习过一点点源码\",{\"1\":{\"2\":1}}],[\"排开这些\",{\"1\":{\"2\":1}}],[\"这次可接着询问\",{\"1\":{\"37\":1}}],[\"这里除了牵扯出这些知识\",{\"1\":{\"36\":1}}],[\"这里指的样式是指颜色那种东西\",{\"1\":{\"34\":1}}],[\"这里n个参数的取值是同一个范围\",{\"1\":{\"7\":1}}],[\"这是用于针对一些拥有大数据包的请求\",{\"1\":{\"34\":1}}],[\"这些我不是很懂\",{\"1\":{\"34\":1}}],[\"这些都需要我慢慢去探索\",{\"1\":{\"28\":1}}],[\"这些也做过一些\",{\"1\":{\"2\":1}}],[\"这也是我突然相投实习的一个原因\",{\"1\":{\"28\":1}}],[\"这三次面试给的收货很大\",{\"1\":{\"27\":1}}],[\"这种题都是典中典了\",{\"1\":{\"24\":1}}],[\"这归咎于我是还没准备就开始投\",{\"1\":{\"22\":1}}],[\"这说明我也不是太拉嘛\",{\"1\":{\"21\":1}}],[\"这个题其实我是没写出来的\",{\"1\":{\"27\":1}}],[\"这个题我是直接暴力的\",{\"1\":{\"26\":1}}],[\"这个时候的我是比较激动的\",{\"1\":{\"21\":1}}],[\"这个说明需要多少个测试用例\",{\"1\":{\"8\":1}}],[\"这两题都是子序列问题\",{\"1\":{\"11\":1}}],[\"这时候就需要他们true\",{\"1\":{\"8\":1}}],[\"这得益于他们的包容性\",{\"1\":{\"2\":1}}],[\"像一些什么uniapp\",{\"1\":{\"2\":1}}],[\"冲冲冲\",{\"1\":{\"1\":1}}],[\"偶尔也会有一些个人的感谢和闲谈这些\",{\"1\":{\"1\":1}}],[\"遭这个博客是用来记录学习哒\",{\"1\":{\"1\":1}}],[\"蒻鸡一个\",{\"1\":{\"1\":1}}],[\"前两个的合并\",{\"1\":{\"8\":1}}],[\"前端学了一年多了\",{\"1\":{\"1\":1}}],[\"前言\",{\"0\":{\"1\":1,\"20\":1,\"31\":1}}],[\"大致优化策略是这样\",{\"1\":{\"34\":1}}],[\"大致就这么点想法了\",{\"1\":{\"28\":1}}],[\"大部分都是直接组件库一把嗦\",{\"1\":{\"28\":1}}],[\"大部分都是顺着我讲到什么\",{\"1\":{\"22\":1}}],[\"大部分都是石城大海的\",{\"1\":{\"21\":1}}],[\"大牛以及是第二段实习\",{\"1\":{\"20\":1}}],[\"大学过的确实快\",{\"1\":{\"1\":1}}],[\"大三了呀\",{\"1\":{\"1\":1}}],[\"博主简介\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
