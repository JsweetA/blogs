import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,e}from"./app-4f88bd9e.js";const t={},p=e(`<h3 id="一-介绍" tabindex="-1"><a class="header-anchor" href="#一-介绍" aria-hidden="true">#</a> 一.介绍</h3><p>vue框架提供了两种渲染模式，即客户端渲染和服务器渲染。这两个方式的本质区别就是对于谁负责解析模板。</p><h4 id="传统的渲染方式" tabindex="-1"><a class="header-anchor" href="#传统的渲染方式" aria-hidden="true">#</a> 传统的渲染方式</h4><figure><img src="https://cdn.nlark.com/yuque/0/2023/png/27119990/1683274852871-67602d3b-a8d3-42c1-aac6-d8b112852909.png#averageHue=%23eeeeee&amp;clientId=u130e8ef4-9f3e-4&amp;from=paste&amp;height=420&amp;id=u524d1478&amp;originHeight=420&amp;originWidth=718&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=44493&amp;status=done&amp;style=none&amp;taskId=ub5e9b37e-dd51-467e-95d4-b60df5fc829&amp;title=&amp;width=718" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ol><li>客户端发送请求给服务器</li><li>服务器向数据库请求数据</li><li>数据库将数据返回给服务器</li><li>服务器将<code>html,css,js</code>发送给客户端</li><li>客户端进行渲染</li></ol><p>这是传统的客户端的渲染方式。但是在这个阶段，服务器返回给的<code>html</code>只是一个普通的<code>html</code>，内部什么都没有，只有一个<code>&lt;div id=&#39;app&#39;&gt;&lt;/div&gt;</code>这个东西(除开那些必要的标签外)。如下面代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">01</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token number">02</span> <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span>
<span class="token number">03</span> <span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
<span class="token number">04</span>   <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
<span class="token number">05</span>   <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width, initial-scale=1.0&quot;</span><span class="token operator">&gt;</span>
<span class="token number">06</span>   <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>My App<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
<span class="token number">07</span>   <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">&quot;stylesheet&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;/dist/app.css&quot;</span><span class="token operator">&gt;</span>
<span class="token number">08</span> <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
<span class="token number">09</span> <span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token number">10</span>   <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token number">11</span>
<span class="token number">12</span>   <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;/dist/app.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token number">13</span> <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
<span class="token number">14</span> <span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，当客户端接收这个<code>html</code>后，交给浏览器，浏览器就会开始解析。但是由于这个<code>html</code>是什么都没有的，所以就会出现白屏的现象。然后当遇见<code>script</code>，<code>link</code>标签后，浏览器才会慢慢开始渲染出页面。</p>`,8),o=[p];function r(l,c){return a(),n("div",null,o)}const k=s(t,[["render",r],["__file","服务端渲染.html.vue"]]);export{k as default};
