import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o,c as s,b as e,d as t,e as a,a as l}from"./app-3388c2d7.js";const p="/blogs/assets/image-20231127194123118-76a89ba6.png",c="/blogs/assets/image-20231127193101194-ed824f8d.png",g="/blogs/assets/image-20231127193203639-72a0a717.png",h={},d=l('<h3 id="静态测试-动态测试" tabindex="-1"><a class="header-anchor" href="#静态测试-动态测试" aria-hidden="true">#</a> 静态测试-动态测试</h3><p>按照是否被执行可分为<strong>动态测试</strong>和<strong>静态测试</strong></p><ul><li>动态测试：功能确认，接口测试，覆盖率分析，性能分析</li><li>静态测试：代码检查，静态结构分析，代码质量度量</li></ul><blockquote><p>其中黑盒只有动态测试，白盒有静态和动态</p></blockquote><p>按照是否针对系统内部结构和具体实现算法的角度可分为：黑盒，白盒</p><h3 id="黑盒测试" tabindex="-1"><a class="header-anchor" href="#黑盒测试" aria-hidden="true">#</a> 黑盒测试</h3><ul><li><p>等价类：找if，寻找有效和无效等价类，并且为此设计测试用例</p></li><li><p>边界值分析：基于等价类的条件下，设计测试用例的时候进行采取边界值取法。其中取法规则如下：</p><ul><li>例如：0&lt;a&lt;10:取值为 -1，0，1，5，9，10，11 -&gt; 范围边界值，中间值，边界值+-1。七个</li><li>例题2：若函数有n个参数，求最少取值：可由上所得 -&gt; 6n + 1（注意：这里n个参数的取值是同一个范围）</li></ul><figure><img src="'+p+'" alt="image-20231127194123118" tabindex="0" loading="lazy"><figcaption>image-20231127194123118</figcaption></figure></li><li><p>因果图：找原因 -&gt; 找结果，其中原因附带什么条件可以得出什么结果</p><ul><li><p>约束关系：互斥（E），包含（I），唯一（O），要求（R），屏蔽（M）</p><figure><img src="'+c+'" alt="image-20231127193101194" tabindex="0" loading="lazy"><figcaption>image-20231127193101194</figcaption></figure></li><li><p>因果关系：恒等，非（~），与和或</p><figure><img src="'+g+'" alt="image-20231127193203639" tabindex="0" loading="lazy"><figcaption>image-20231127193203639</figcaption></figure></li></ul></li><li><p>状态图：明确状态节点 -&gt; 绘制迁移图 -&gt; 绘制状态迁移树 -&gt; 抽取测试路径</p></li><li><p>场景法：画流程图 -&gt; 主要事件 -&gt; 备选事件 -&gt; 设计测试用例</p></li></ul><p>后两个更倾向于真实业务测试，也就是功能测试。</p>',8),u={href:"http://zhihu.com",target:"_blank",rel:"noopener noreferrer"},_={href:"https://zhuanlan.zhihu.com/p/451208514#:~:text=E%E7%BA%A6%E6%9D%9F%EF%BC%88%E5%BC%82%EF%BC%89%EF%BC%9Aa%E5%92%8Cb%E4%B8%AD%E8%87%B3%E5%A4%9A%E6%9C%89%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%83%BD%E4%B8%BA1%EF%BC%8C%E5%8D%B3a%E5%92%8Cb%E4%B8%8D%E8%83%BD%E5%90%8C%E6%97%B6%E4%B8%BA1%E3%80%82",target:"_blank",rel:"noopener noreferrer"},f={href:"https://juejin.cn/post/7283797053339353129#heading-9",target:"_blank",rel:"noopener noreferrer"},b=l('<hr><h3 id="白盒测试" tabindex="-1"><a class="header-anchor" href="#白盒测试" aria-hidden="true">#</a> 白盒测试</h3><p>白盒测试可分为<strong>覆盖测试和基本路径测试</strong>。其中<strong>覆盖测试</strong>有</p><ul><li>语句覆盖：让每个语句都执行</li><li>判定覆盖：每个判断都取一次真假，例如if(a&gt;0 &amp;&amp; b&gt;0)，要保证这个if的值取满true和false</li><li>条件覆盖：每个条件，指的是if内部的判断取满true，false。同上例子，要a和b这两个判断都取满true，false</li><li>条件判定覆盖：前两个的合并。所以他是一定包含了前两个的覆盖</li><li>组合覆盖：条件组合情况，例如上面例子，a&gt;0和b&gt;0的两个判断，这时候就需要他们true，false的所有组合</li><li>路径覆盖：画流程图，每条路都走</li></ul><p><strong>基本路径测试</strong></p><ul><li>圈复杂度：判断节点 + 1，区域的个数，边 - 节点 + 2</li><li>使用步骤： <ol><li>画控制图：先画流程图 -&gt; 控制流图</li><li>计算圈复杂度：这个说明需要多少个测试用例</li><li>导出测试用例：按照路径给予测试用例</li><li>写测试用例</li></ol></li></ul>',6),m={href:"https://blog.csdn.net/XU_MAN_/article/details/102963251",target:"_blank",rel:"noopener noreferrer"},E=e("h3",{id:"集成测试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#集成测试","aria-hidden":"true"},"#"),t(" 集成测试")],-1),B={href:"https://blog.csdn.net/weixin_45459356/article/details/117034268?app_version=6.1.4&code=app_1562916241&csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22117034268%22%2C%22source%22%3A%222301_80250292%22%7D&uLinkId=usr1mkqgl919blen&utm_source=app",target:"_blank",rel:"noopener noreferrer"},A={href:"https://developer.aliyun.com/article/1102979",target:"_blank",rel:"noopener noreferrer"};function C(k,x){const i=r("ExternalLinkIcon");return o(),s("div",null,[d,e("blockquote",null,[e("p",null,[t("[完美诠释因果图与判定表法 - 知乎 ("),e("a",u,[t("zhihu.com"),a(i)]),t(")]("),e("a",_,[t("https://zhuanlan.zhihu.com/p/451208514#:~:text=E约束（异）：a和b中至多有一个可能为1，即a和b不能同时为1。"),a(i)]),t(" I约束（或）：a、b、c中至少有一个必须为1，即a、b、c不能同时为0。,O约束（唯一）：a和b必须有一个且仅有一个为1。 R约束（要求）：a是1时，b必须是1，即a为1时，b不能为0。 M约束（强制）：若结果a为1，则结果b强制为0。)")]),e("p",null,[e("a",f,[t("黑盒测试"),a(i)])])]),b,e("blockquote",null,[e("p",null,[t("[基本路径测试](![img](file:///C:\\Users\\Administrator\\AppData\\Roaming\\Tencent\\QQ\\Temp%W@GJ$ACOF(TYDYECOKVDYB.png)"),e("a",m,[t("https://blog.csdn.net/XU_MAN_/article/details/102963251"),a(i)]),t(")")])]),E,e("ul",null,[e("li",null,[e("a",B,[t("集成测试_维维sanguine的博客-CSDN博客"),a(i)])]),e("li",null,[e("a",A,[t("集成测试之自顶向下、自底向上、三明治集成-阿里云开发者社区 (aliyun.com)"),a(i)])])])])}const F=n(h,[["render",C],["__file","测试.html.vue"]]);export{F as default};
